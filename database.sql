/********************* ROLES **********************/

/********************* UDFS ***********************/

/****************** GENERATORS ********************/

CREATE GENERATOR DOCUMENTS_ID_SEQ;
CREATE GENERATOR FULLTEXT_ID_SEQ;
CREATE GENERATOR GEN_IMAGES_ID;
/******************** DOMAINS *********************/

/******************* PROCEDURES ******************/

/******************** TABLES **********************/

CREATE TABLE DOCUMENTS
(
  ID INTEGER NOT NULL,
  DOCUMENTNAME VARCHAR(255),
  PDFPATH VARCHAR(1024),
  SCANDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  DOCUMENTHASH BLOB SUB_TYPE 0,
  CONSTRAINT PK_ID PRIMARY KEY (ID)
);
CREATE TABLE FULLTEXT
(
  ID INTEGER NOT NULL,
  DOCUMENTS_ID INTEGER,
  FULLTEXT BLOB SUB_TYPE 1,
  TEXTTYPE VARCHAR(64),
  CONSTRAINT PK_FULLTEXT_ID PRIMARY KEY (ID)
);
CREATE TABLE IMAGES
(
  ID INTEGER NOT NULL,
  DOCUMENTID INTEGER,
  PATH VARCHAR(1024),
  IMAGEHASH BLOB SUB_TYPE 0,
  CONSTRAINT PKID PRIMARY KEY (ID)
);
/********************* VIEWS **********************/

/******************* EXCEPTIONS *******************/

/******************** TRIGGERS ********************/

SET TERM ^ ;
CREATE TRIGGER DOCUMENTS_ID_TRIG FOR DOCUMENTS ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
 -- Autoinc emulation:
 IF ((NEW.ID IS NULL) or (NEW.ID=0)) THEN NEW.ID=NEXT VALUE FOR DOCUMENTS_ID_SEQ;
    
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER FULLTEXT_ID_TRIG FOR FULLTEXT ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
 -- Autoinc emulation:
 IF ((NEW.ID IS NULL) or (NEW.ID=0)) THEN NEW.ID=NEXT VALUE FOR FULLTEXT_ID_SEQ;
    
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER IMAGES_BI FOR IMAGES ACTIVE
BEFORE INSERT POSITION 0
AS
DECLARE VARIABLE tmp DECIMAL(18,0);
BEGIN
  IF (NEW.ID IS NULL) THEN
    NEW.ID = GEN_ID(GEN_IMAGES_ID, 1);
  ELSE
  BEGIN
    tmp = GEN_ID(GEN_IMAGES_ID, 0);
    if (tmp < new.ID) then
      tmp = GEN_ID(GEN_IMAGES_ID, new.ID-tmp);
  END
END^
SET TERM ; ^

UPDATE RDB$RELATION_FIELDS set RDB$DESCRIPTION = 'Future use: unique document identifier based on document form etc. Should prevent duplicate scans of the same document from entering into the database'  where RDB$FIELD_NAME = 'DOCUMENTHASH' and RDB$RELATION_NAME = 'DOCUMENTS';
ALTER TABLE FULLTEXT ADD CONSTRAINT FK_FULLTEXT_DOCUMENTS
  FOREIGN KEY (DOCUMENTS_ID) REFERENCES DOCUMENTS (ID);
ALTER TABLE IMAGES ADD CONSTRAINT FK_IMAGESDOC
  FOREIGN KEY (DOCUMENTID) REFERENCES DOCUMENTS (ID) ON UPDATE CASCADE ON DELETE CASCADE;
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON DOCUMENTS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON FULLTEXT TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON IMAGES TO  SYSDBA WITH GRANT OPTION;

